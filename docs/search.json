[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analysis of Global Health Expenditure",
    "section": "",
    "text": "1 Introduction :\nFor this project, we chose to explore housing estimates across U.S. counties using data from the American Community Survey (ACS). This topic is particularly relevant given the ongoing challenges surrounding housing affordability, availability, and demographic shifts in the United States. The dataset offers an opportunity to analyze trends in housing occupancy, vacancy rates, and housing costs. Key questions include: How do housing availability and affordability vary across different regions and income levels? Are there patterns in housing disparities that align with socioeconomic or geographic factors? By addressing these questions, this project aims to provide insights into the factors driving housing trends and inform potential policy interventions to address housing inequalities. This context ensures that even readers unfamiliar with housing datasets can appreciate the relevance and significance of the analysis.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction :</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe dataset used for this analysis is sourced from the American Community Survey (ACS) 5-Year Housing Estimates. The data is collected and maintained by the U.S. Census Bureau, which conducts comprehensive surveys to assess housing characteristics across counties in the United States. The dataset is provided in a CSV format and includes over 240 columns with variables such as total housing units, occupancy rates, and housing costs. These variables are measured and updated annually, with detailed geographic identifiers for each county. The data is well-documented, and the source is reliable for understanding housing trends at a granular level. To import the data, I used standard data manipulation tools (e.g., Python’s pandas library). Some challenges include the large number of columns and potential for missing values, which require preprocessing for effective analysis. The dataset can be accessed directly from the U.S. Census Bureau’s data repository.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nlibrary(tidyverse)  \n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(naniar) \nfile_path &lt;- \"ACS_5YR_Housing_Estimate_Data_by_County_-8702403216850992228.csv\"\nhousing_data &lt;- read.csv(file_path)\n\n# Rename specified columns explicitly\nfiltered_data &lt;- housing_data %&gt;%\n  rename(\n    Occupancy_Status = B25002EST1,\n    Tenure_By_Household_Size = B25009EST2,\n    Median_Number_Of_Rooms_By_Tenure = B25021EST1,\n    Units_In_Structure = B25024EST2,\n    Tenure_By_Units_In_Structure = B25032EST2,\n    Tenure_By_Year_Structure_Built = B25036_OWN_80TO99,\n    Median_Year_Structure_Built_By_Tenure = B25037EST3,\n    Bedrooms = B25041EST2,\n    Tenure_By_Bedrooms = B25042EST3,\n    Contract_Rent = B25056_500TO599,\n    Median_Contract_Rent = B25058EST1,\n    Bedrooms_By_Gross_Rent = B25068EST2,\n    Mortgage_Status_By_Median_Value = B25097EST1,\n    Tenure_By_Selected_Physical_And_Financial_Conditions = B25123_TOT\n  )\n\n# Keep only the renamed columns and the original identifiers\ncolumns_to_keep &lt;- c(\n  \"Occupancy_Status\",\n  \"Tenure_By_Household_Size\",\n  \"Median_Number_Of_Rooms_By_Tenure\",\n  \"Units_In_Structure\",\n  \"Tenure_By_Units_In_Structure\",\n  \"Tenure_By_Year_Structure_Built\",\n  \"Median_Year_Structure_Built_By_Tenure\",\n  \"Bedrooms\",\n  \"Tenure_By_Bedrooms\",\n  \"Contract_Rent\",\n  \"Median_Contract_Rent\",\n  \"Bedrooms_By_Gross_Rent\",\n  \"Mortgage_Status_By_Median_Value\",\n  \"Tenure_By_Selected_Physical_And_Financial_Conditions\",\n  \"OBJECTID_1\", \"GEOID\", \"STATE\", \"STUSAB\", \"STATE_NAME\", \"COUNTY\", \"NAME\"\n)\n\nfiltered_data &lt;- filtered_data %&gt;%\n  select(all_of(columns_to_keep))\n\n# Print renamed and filtered columns for verification\nprint(\"Renamed and Filtered Columns:\")\n\n\n[1] \"Renamed and Filtered Columns:\"\n\n\nCode\nprint(colnames(filtered_data))\n\n\n [1] \"Occupancy_Status\"                                    \n [2] \"Tenure_By_Household_Size\"                            \n [3] \"Median_Number_Of_Rooms_By_Tenure\"                    \n [4] \"Units_In_Structure\"                                  \n [5] \"Tenure_By_Units_In_Structure\"                        \n [6] \"Tenure_By_Year_Structure_Built\"                      \n [7] \"Median_Year_Structure_Built_By_Tenure\"               \n [8] \"Bedrooms\"                                            \n [9] \"Tenure_By_Bedrooms\"                                  \n[10] \"Contract_Rent\"                                       \n[11] \"Median_Contract_Rent\"                                \n[12] \"Bedrooms_By_Gross_Rent\"                              \n[13] \"Mortgage_Status_By_Median_Value\"                     \n[14] \"Tenure_By_Selected_Physical_And_Financial_Conditions\"\n[15] \"OBJECTID_1\"                                          \n[16] \"GEOID\"                                               \n[17] \"STATE\"                                               \n[18] \"STUSAB\"                                              \n[19] \"STATE_NAME\"                                          \n[20] \"COUNTY\"                                              \n[21] \"NAME\"                                                \n\n\n\n\nCode\nmissing_summary &lt;- filtered_data %&gt;%\n  summarise(across(everything(), ~ sum(is.na(.)))) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"Column\", values_to = \"MissingCount\") %&gt;%\n  arrange(desc(MissingCount))\n\n# Print missing value summary\nprint(\"Missing Values Summary:\")\n\n\n[1] \"Missing Values Summary:\"\n\n\nCode\nprint(missing_summary)\n\n\n# A tibble: 21 × 2\n   Column                                MissingCount\n   &lt;chr&gt;                                        &lt;int&gt;\n 1 Median_Contract_Rent                            12\n 2 Mortgage_Status_By_Median_Value                  5\n 3 Occupancy_Status                                 0\n 4 Tenure_By_Household_Size                         0\n 5 Median_Number_Of_Rooms_By_Tenure                 0\n 6 Units_In_Structure                               0\n 7 Tenure_By_Units_In_Structure                     0\n 8 Tenure_By_Year_Structure_Built                   0\n 9 Median_Year_Structure_Built_By_Tenure            0\n10 Bedrooms                                         0\n# ℹ 11 more rows\n\n\nCode\n# Calculate Missing Value Percentages\nmissing_summary &lt;- missing_summary %&gt;%\n  mutate(MissingPercentage = (MissingCount / nrow(filtered_data)) * 100)\n\n# Print missing percentages\nprint(\"Missing Values Percentage:\")\n\n\n[1] \"Missing Values Percentage:\"\n\n\nCode\nprint(missing_summary)\n\n\n# A tibble: 21 × 3\n   Column                                MissingCount MissingPercentage\n   &lt;chr&gt;                                        &lt;int&gt;             &lt;dbl&gt;\n 1 Median_Contract_Rent                            12             0.373\n 2 Mortgage_Status_By_Median_Value                  5             0.155\n 3 Occupancy_Status                                 0             0    \n 4 Tenure_By_Household_Size                         0             0    \n 5 Median_Number_Of_Rooms_By_Tenure                 0             0    \n 6 Units_In_Structure                               0             0    \n 7 Tenure_By_Units_In_Structure                     0             0    \n 8 Tenure_By_Year_Structure_Built                   0             0    \n 9 Median_Year_Structure_Built_By_Tenure            0             0    \n10 Bedrooms                                         0             0    \n# ℹ 11 more rows\n\n\nCode\n# Visualize Missing Values\n# Heatmap of Missingness\nrow_missing_summary &lt;- filtered_data %&gt;%\n  mutate(MissingCount = rowSums(is.na(.))) %&gt;%\n  group_by(MissingCount) %&gt;%\n  summarize(Count = n()) %&gt;%\n  arrange(MissingCount)\n\n# Plot the Improved Distribution\nggplot(row_missing_summary, aes(x = MissingCount, y = Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\", color = \"black\", width = 0.8) +\n  geom_text(aes(label = Count), vjust = -0.3, size = 4) +\n  scale_x_continuous(breaks = 0:max(row_missing_summary$MissingCount)) +\n  labs(\n    title = \"Distribution of Missing Data Across Rows\",\n    subtitle = \"Number of rows with varying levels of missing data\",\n    x = \"Number of Missing Values in a Row\",\n    y = \"Frequency (Number of Rows)\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 10),\n    plot.title = element_text(hjust = 0.5, size = 16),\n    plot.subtitle = element_text(hjust = 0.5, size = 12)\n  )\n\n\n\n\n\n\n\n\n\nCode\nggplot(missing_summary, aes(x = reorder(Column, -MissingPercentage), y = MissingPercentage)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\", color = \"black\") +\n  geom_text(aes(label = paste0(round(MissingPercentage, 1), \"%\")), hjust = -0.1, size = 3.5) +\n  coord_flip() +\n  labs(\n    title = \"Percentage of Missing Values by Column\",\n    subtitle = \"Highlighting the extent of missing data in each variable\",\n    x = \"Columns\",\n    y = \"Percentage Missing\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    axis.text.y = element_text(size = 10),\n    plot.title = element_text(hjust = 0.5, size = 14),\n    plot.subtitle = element_text(hjust = 0.5, size = 12)\n  )",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  }
]